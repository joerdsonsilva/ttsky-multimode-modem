/* Generated by Yosys 0.36+42 (git sha1 70d35314d, clang 11.0.1-2 -fPIC -Os) */

module integrator2(reset, clk, comp_in, comp_out);

  wire _0_;
  reg _1_;
  wire [31:0] _2_;
  wire _3_;
  wire _4_;
  wire _5_;
  wire _6_;
  wire _7_;
  wire [31:0] _8_;
  reg [31:0] _9_;
  input clk;
  wire clk;
  input [6:0] comp_in;
  wire [6:0] comp_in;
  output comp_out;
  wire comp_out;
  wire [31:0] i;
  input reset;
  wire reset;
  assign _4_ = $signed(i) > $signed(32'd2);
  assign _5_ = _3_ | _4_;
  assign _6_ = _5_ ? 1'h1 : 1'h0;
  assign _7_ = _0_ ? _6_ : 1'h0;
  assign _8_ = _0_ ? _2_ : 32'd0;

  always @(posedge clk, posedge reset)
    if (reset) _9_ <= 32'd0;
    else _9_ <= _8_;
  always @(posedge clk, posedge reset)
    if (reset) _1_ <= 1'h0;
    else _1_ <= _7_;
  assign _0_ = comp_in == 7'h7f;
  assign _2_ = i + 32'd1;
  assign _3_ = i == 32'd2;
  assign i = _9_;
  assign comp_out = _1_;
endmodule
